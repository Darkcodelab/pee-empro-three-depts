<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>PE EMPRO | Cutting Board</title>
    <%- include("./partials/head.ejs") %>
  </head>
  <body>
    <div class="container">
      <header class="board__header">
        <h2>Cutting Board</h2>
        <a href="/" class="nav-link">Home</a>
      </header>
      <main class="board__main fib__main">
        <div class="board__todo">
          <h3>Todo</h3>
          <ul class="board__card">
            <% for(let i=0; i<data.length; i++) {%> 
              <li class="card__li">
                <% for(let key in data[i]) {%>
                  <% if(key !== 'id') {%> 
                    <% if(key !== 'createdAt') {%> 
                      <div><b><%=key %>:</b>  <%=data[i][key] %>  </div>
                    <% } %> 
                  <% } %>
                <% } %>
                <div class="card__completed"><a class="start__card" href="/cutting-board/<%=data[i].id%>">Start</a></div>
              </li>
            <%}%>
          </ul>
        </div>
        <div class="board_inprogress">
          <h3>In Progess</h3>
          <ul class="board__card" id="InProgressContainer">
            <% for(let i=0; i<inProgress.length; i++) {%> 
              <li class="card__li">
                <% for(let key in inProgress[i]) {%> 
                  <% if(key !== 'id') {%> 
                    <% if(key !== 'createdAt') {%> 
                      <div><b><%=key %>:</b>  <%=inProgress[i][key] %>  </div>
                    <% } %> 
                  <% } %>
                <% } %>
                <div class="card__completed"><a class="cutting-completed" href="/cutting-board/completed/<%=inProgress[i].id%>">Completed</a></div>
              </li>
            <%}%>
          </ul>
        </div>
        <div class="board__completed">
          <h3>Completed</h3>
          <ul class="board__card">
            <% for(let i=0; i<completed.length; i++) {%> 
              <li class="card__li">
                <% for(let key in completed[i]) {%> 
                  <% if(key !== 'id') {%> 
                    <% if(key !== 'createdAt') {%> 
                      <div><b><%=key %>:</b>  <%=completed[i][key] %>  </div>
                    <% } %> 
                  <% } %>
                <% } %>
              </li>
            <%}%>
          </ul>
        </div>
      </main>
      <audio id="notification" src="/sounds/notification.mp3" muted></audio>
    </div>
    <script src="/socket.io/socket.io.js"></script>
    <script>
      let socket = io();
      let btn = document.getElementsByClassName("cutting-completed")[0];
      if(btn) {
        btn.addEventListener("click", function() {
          // socket.emit('workcycle complete', 'One Work Cycle Completed')
          socket.emit('dept completed', 'One Work Cycle Completed')
        });
      }
      socket.on("dept completed", (msg) => {
        document.getElementById("notification").muted = false;
        document.getElementById("notification").play();
        const publicKey =
  "BGHOaZknsPZZUOs5Nc4LixnkLJHGh0bpdeTB1jQ_tQnjomRwFvlU1hBKnP7FFfUZpDl2CMu5pH59xEJ-fpSYbT8";
      if ("serviceWorker" in navigator) {
        send().catch((err) => console.log(err));
      }
      async function send() {
        const register = await navigator.serviceWorker.register("/serviceWorker.js");
        console.log("In Send")
        const subscription = await register.pushManager.subscribe({
          userVisibleOnly: true,
          applicationServerKey: urlBase64ToUint8Array(publicKey),
        });
        await fetch('/subscribe/' + msg, {
            method: "POST",
            body: JSON.stringify(subscription),
            headers: {
                'content-type': "application/json"
            }
        });
      }
      function urlBase64ToUint8Array(base64String) {
          var padding = '='.repeat((4 - base64String.length % 4) % 4);
          var base64 = (base64String + padding)
              .replace(/\-/g, '+')
              .replace(/_/g, '/');
          var rawData = window.atob(base64);
          var outputArray = new Uint8Array(rawData.length);
          for (var i = 0; i < rawData.length; ++i) {
              outputArray[i] = rawData.charCodeAt(i);
          }
          return outputArray;
      }
      });
      
    </script>
    <!-- <script>
      let InProgressContainer = document.getElementById("InProgressContainer");
      let InProgressLength = InProgressContainer.children.length;
      let startCard = document.getElementsByClassName('start__card')
      fetch('/task-limit').then(response => response.json()).then(data => {
          if(InProgressLength >= data.limit) {
            for(let i=0; i<startCard.length; i++) {
              startCard[i].style.pointerEvents = 'none'
              startCard[i].innerText = 'Limit Exceeded'
            }
          }else {
            for(let i=0; i<startCard.length; i++) {
              startCard[i].style.pointerEvents = 'all'
              startCard[i].innerText = 'Start';
            }
          }
      })
    </script> -->
  </body>
</html>
